name: publish-fast-ctc-decode

on:
  push:
    tags:
       - 'v*'

jobs:

  linux-x86-wheels:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux_2_31_x86_64
    steps:
     - uses: actions/checkout@v4
     - name: Build wheels
       run: |
         bash .github/workflows/build-wheels.sh
     - uses: actions/upload-artifact@v4
       with:
         name: linux-x86-wheels
         path: wheelhouse

  linux-aarch-wheels:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          - quay.io/pypa/manylinux_2_31_aarch64
    steps:
      - uses: actions/checkout@v4
      - name: Install QEMU
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install arm64
      - name: Build wheels
        run: |
          docker run --platform linux/arm64 --workdir /src -v ${PWD}:/src ${{ matrix.container }} /bin/bash .github/workflows/build-wheels.sh
      - uses: actions/upload-artifact@v4
        with:
          name: linux-aarch-wheels
          path: wheelhouse

  osx-wheels:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13', '3.14']
    steps:
     - uses: actions/checkout@v4
     - uses: actions-rs/toolchain@v1
       with:
         toolchain: 1.78.0
         default: true
     - uses: actions/setup-python@v4
       with:
         python-version: ${{ matrix.python-version }}
     - name: Build wheels
       run: |
         python3 -m pip install maturin
         rustup target add x86_64-apple-darwin
         rustup target add aarch64-apple-darwin
         maturin build -F python --release --strip --target universal2-apple-darwin
     - uses: actions/upload-artifact@v4
       with:
         name: osx-${{ matrix.python-version }}-wheel
         path: target/wheels

  windows-wheels:
    runs-on: windows-latest
    steps:
     - uses: actions/checkout@v4
     - uses: actions-rs/toolchain@v1
       with:
         toolchain: 1.78.0
         default: true
     - uses: actions/setup-python@v4
     - name: Build wheels
       run: |
         python -m pip install maturin
         maturin build -F python --release
     - uses: actions/upload-artifact@v4
       with:
         name: windows-wheels
         path: target/wheels

#  npm-package:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-node@v2
#        with:
#          node-version: '14.x'
#          registry-url: 'https://registry.npmjs.org'
#          scope: '@nanopore'
#      - run: npm i
#      - run: npm run build
#      - run: npm publish
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
